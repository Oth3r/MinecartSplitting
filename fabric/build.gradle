plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'

	id "me.modmuss50.mod-publish-plugin" version "0.8.4"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.mod_id
}

repositories {
	maven { url = "https://maven.terraformersmc.com/releases/" }
}

fabricApi {
	configureDataGeneration()
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
}

processResources {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	filteringCharset = "UTF-8"

	var replaceProperties = [
			version                : project.version,
			minecraft_version      : minecraft_version,
			min_minecraft_version  : min_minecraft_version,
			max_minecraft_version  : max_minecraft_version,
			loader_version         : loader_version,
			mod_id                 : mod_id
	]

	inputs.properties replaceProperties
	filesMatching("fabric.mod.json") {
		expand replaceProperties
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.mod_id
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

publishMods {
	changelog = file('../changelog.md').text
	type = STABLE

	file = remapJar.archiveFile
	modLoaders.add("fabric")
	modLoaders.add("quilt")

	version = mod_version
	displayName = "v${mod_version} [Fabric]"

	curseforge {
		accessToken = env.fetchOrNull('CURSEFORGE')
		projectId = "1098273"
		projectSlug = "minecart-splitting"
		minecraftVersions.addAll(minecraft_versions.split(",").toList())

		requires("fabric-api")

		announcementTitle = "Download from CurseForge"
	}

	modrinth {
		accessToken = env.fetchOrNull('MODRINTH')
		projectId = "xQUc45Pf"
		minecraftVersions.addAll(minecraft_versions.split(",").toList())

		requires("fabric-api")

		announcementTitle = "Download from Modrinth"
	}
}